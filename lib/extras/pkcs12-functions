#!/usr/bin/env bash

# pkcs12-functions - make ssl great again

pkcs12-create() {
  local stub="$1"
  openssl pkcs12 \
    -export \
    -out "${stub}.pfx" \
    -inkey "${stub}.key" \
    -certfile "${stub}.chain" \
    -in "${stub}.cert"
}

pkcs12-verify() {
  local pfx_file="${1:?}"
  local pfx_file_basename="$(basename $pfx_file)"
  read -p "Please enter PFX password: " -sr pfx_pass
  cafile=/etc/ssl/certs/ca-certificates.crt

  # Create temporary files for certificate and chain
  cert_file=$(mktemp)
  chain_file=$(mktemp)

  # Remove temporary files on exit
  trap 'rm -f "$cert_file" "$chain_file"' EXIT

  # Extract certificate and chain from PFX file
  openssl pkcs12 $BMA_PKCS12_ARGS -in "$pfx_file" -nodes -passin "pass:${pfx_pass:?}" |
    openssl x509 -noout -issuer -subject -dates || return 1

  cat "$pfx_file" | pkcs12-cert "$pfx_pass" > "$cert_file"
  cat "$pfx_file" | pkcs12-chain "$pfx_pass" > "$chain_file"

  # Verify certificate using CA file and chain
  openssl verify \
    -CAfile "$cafile" \
    -untrusted "$chain_file" \
    "$cert_file" |
    sed "s#$cert_file#$pfx_file_basename#"
}

pkcs12-extract() {
  [[ $# -ne 1 ]] && echo "Usage: pkcs12-extract <pfx_file>" >&2 && return 1
  [[ ! -f "$1" ]] && echo "Error: $1 is not a file" >&2 && return 1
  read -p "Please enter PFX password: " -sr pfx_pass
  pfx_file="$1"
  key_file=$(   basename "$pfx_file" .pfx).key
  chain_file=$( basename "$pfx_file" .pfx).chain
  cert_file=$(  basename "$pfx_file" .pfx).cert
  cat "$pfx_file" | pkcs12-key    "$pfx_pass" > "$key_file"
  cat "$pfx_file" | pkcs12-chain  "$pfx_pass" > "$chain_file"
  cat "$pfx_file" | pkcs12-cert   "$pfx_pass" > "$cert_file"
}

pkcs12-key() {
  [[ $# -ne 1 ]] && echo "Usage: pkcs12-key <password>" >&2 && return 1
  pass="${1:?}"
  if ! openssl pkcs12 $BMA_PKCS12_ARGS -nocerts -passin "pass:${pass:?}" 2>/dev/null; then
    echo "Error: Failed to extract key from PFX input" >&2
    return 1
  fi
}

pkcs12-chain() {
  [[ $# -ne 1 ]] && echo "Usage: pkcs12-chain <password>" >&2 && return 1
  pass="${1:?}"
  if ! openssl pkcs12 $BMA_PKCS12_ARGS -cacerts -nokeys -passin "pass:${pass:?}" 2>/dev/null; then
    echo "Error: Failed to extract chain from PFX input" >&2
    return 1
  fi
}

pkcs12-cert() {
  [[ $# -ne 1 ]] && echo "Usage: pkcs12-cert <password>" >&2 && return 1
  pass="${1:?}"
  if ! openssl pkcs12 $BMA_PKCS12_ARGS -clcerts -nokeys -passin "pass:${pass:?}" 2>/dev/null; then
    echo "Error: Failed to extract certificate from PFX input" >&2
    return 1
  fi
}

x509() {
  openssl x509 -text
}
