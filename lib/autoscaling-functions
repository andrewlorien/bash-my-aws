#!/bin/bash
#
# autoscaling-functions
##
# show the current autoscale settings
# namespace          | implemented
#   ecs              |  yes
#   elasticmapreduce |  no
#   ec2              |  maybe
#   appstream        |  maybe
#   dynamodb         |  no
#   rds              |  maybe
#   sagemaker        |  no
#   custom-resource  |  no
#   comprehend       |  no
#   lambda           |  no
#   cassandra        |  no
#   kafka            |  no
#   elasticache      |  no
#   neptune          |  no


scaling-ecs() {
  # List autoscaling actions
  # filter by environment (eg test1) or namespace (eg ecs)
  # if you pass an argument, it'll filter for clusters whose ARN contains your text
  #
  #   $ scaling-actions test
  #   test-octopus-ecs-cluster  ACTIVE  1  1  0
  #   test1-ecs-cluster        ACTIVE  3  1  0
  #   test3-ecs-cluster        ACTIVE  3  1  0
  #   test2-ecs-cluster        ACTIVE  3  3  0

  local filters=$(__bma_read_filters $@) # Filter output by arguments (optional)
  aws application-autoscaling describe-scheduled-actions \
    --service-namespace ecs \
    --query "ScheduledActions[].[ScheduledActionName,Schedule,ScalableTargetAction.MinCapacity,ScalableTargetAction.MaxCapacity]" \
    --output text       |
    grep -E -- "$filters" |
    LC_ALL=C sort -b -k 2|
    columnise
}
